name: App ECR Build and Push

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - Microservices-main/**

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: python-microservice
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID_PRODUCTION }}

jobs:
  build_and_push_ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python (for tests)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd Microservices-main
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Run tests
        run: |
          cd Microservices-main
          export PYTHONPATH="$PWD"
          pytest -q

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/gha-terraform-prod
          role-session-name: app-ecr-push
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Resolve version (.env or fallback)
        id: ver
        shell: bash
        run: |
          set -euo pipefail
          VERSION=""

          # Prefer Microservices-main .env
          if [ -f "Microservices-main/.env" ]; then
            set -o allexport
            . Microservices-main/.env || true
            set +o allexport
          fi

          # Default
          if [ -z "${VERSION:-}" ]; then
            VERSION="v0.0.0"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Resolved VERSION=$VERSION"

      - name: Build, tag, and push image to Amazon ECR (Microservices-main)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.ver.outputs.version }}
        run: |
          cd Microservices-main
          docker build \
            --build-arg VERSION=$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
