  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
# https://runbooks.prometheus-operator.dev/runbooks/kubernetes/cputhrottlinghigh/
# https://mailtrap.io/blog/outlook-smtp/#How-to-configure-Outlook-IMAP-settings
# prometheusOperator:
  # nodeSelector:
    # kafka-cluster-role: admin-tools

# kube-state-metrics:
  # nodeSelector:
    # kafka-cluster-role: admin-tools

grafana:
  enabled: true
  # Use existing secret for admin password
  admin:
    existingSecret: "grafana-admin-secret"
    userKey: "admin-user"
    passwordKey: "admin-password"
  service:
    type: ClusterIP
  
  assertNoLeakedSecrets : false
  # Configure root URL for proper URL handling behind load balancer
  grafana.ini:
    # server:
      # root_url: "https://production-garuooo.moneyfellows.com"
      # serve_from_sub_path: false
    
    # auth.azuread:
      # name : Azure AD
      # enabled : true
      # allow_sign_up : true
    #   auto_login : false
    #   client_authentication : "client_secret_post" 
    #   client_id : ""
    #   client_secret : ""
    #   #managed_identity_client_id : MANAGED_IDENTITY_CLIENT_ID
    #   #federated_credential_audience : FEDERATED_CREDENTIAL_AUDIENCE
    #   scopes : "openid email profile"
    #   auth_url : "https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize"
    #   token_url : "https://login.microsoftonline.com/organizations/oauth2/v2.0/token"
    #   #allowed_domains =
    #   #allowed_groups =
    #   allowed_organizations : ""
    #   allow_assign_grafana_admin : true
    #   skip_org_role_sync : false
    #   role_attribute_strict : false
    #   use_pkce : true
    
    # users:
    #   auto_assign_org_role : Viewer
    #   auto_assign_org : false

    security:
      allow_embedding: true
    auth:
      disable_login_form: false

  nodeSelector:
    Purpose: "general-workloads"

  tolerations:
    - key: "type"
      operator: "Equal"
      value: "self-managed"
      effect: "NoSchedule"
   
    - key: "recovery"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "2000Mi"
      cpu: "2000m"

  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 20Gi
    storageClassName: "ebs-sc"  # Replace with your storage class
  

    nodeSelector:
      Purpose: "general-workloads"

    tolerations:
      - key: "type"
        operator: "Equal"
        value: "self-managed"
        effect: "NoSchedule"

      - key: "recovery"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "6Gi"
        cpu: "2000m"

    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
          storageClassName: "ebs-sc"  # Replace with your storage class

alertmanager:
  alertmanagerSpec:
    nodeSelector:
      Purpose: "general-workloads"

    tolerations:
      - key: "type"
        operator: "Equal"
        value: "self-managed"
        effect: "NoSchedule"
    
      - key: "recovery"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

  # config:
  #   global:
  #     smtp_smarthost: 'smtp.gmail.com:587'
  #     resolve_timeout: 5m
  #     smtp_from: ''
  #     smtp_auth_username: ""
  #     smtp_auth_password: ""  # Use your Gmail App Password
  #     smtp_require_tls: true
  #   route:
  #     group_by: ['alertname', 'severity', 'job']
  #     group_wait: 30s
  #     group_interval: 5m
  #     repeat_interval: 12h
  #     receiver: 'smtp'
  #     routes:
  #       - receiver: 'smtp'
  #   receivers:
  #     - name: 'smtp'
  #       email_configs:
  #       - to: ''
  #         require_tls: true
  #   templates:
  #   - '/etc/alertmanager/config/*.tmpl'

nodeExporter:
  nodeExporterSpec:
    resources:
      requests:
        memory: "100Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "150m"
    
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8sContainerCpuUsageSecondsTotal: true
    k8sContainerMemoryCache: true
    k8sContainerMemoryRss: true
    k8sContainerMemorySwap: true
    k8sContainerResource: true
    k8sContainerMemoryWorkingSetBytes: true
    k8sPodOwner: true
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeControllerManager: false
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeSchedulerAlerting: false
    kubeSchedulerRecording: false
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true
    windows: true